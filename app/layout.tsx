import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { headers } from "next/headers";
import { cachedValidateAuthWithRedirect } from "../utils/supabase-auth/auth";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  // ---------------------------
  // 現在のリクエストパスを取得
  // ---------------------------
  const headersList = await headers();
  const pathname = headersList.get("x-current-path");
  const isLoginPage = pathname?.startsWith("/login");

  // ---------------------------
  // ログインページ以外は認証確認
  // ---------------------------
  if (!isLoginPage) {
    await cachedValidateAuthWithRedirect();
  }

  return (
    <html lang="ja" className="h-full">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {isLoginPage ? (
          <>{children}</>
        ) : (
          <main className="relative min-h-screen">
            {children}
          </main>
        )}
      </body>
    </html>
  );
}
